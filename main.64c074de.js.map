{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","fieldCellList","querySelectorAll","fieldRowList","gameScore","messageWin","messageLose","messageStart","handleStartButton","classList","toggle","createNewCell","colorField","textContent","contains","fieldCellAdder","item","className","startTheGame","addEventListener","winGame","some","cell","add","remove","removeEventListener","loseGame","every","rowI","curentRow","colI","children","emptyFieldNumber","index","winTheGame","loseTheGame","Math","floor","random","length","handleKeyDown","e","key","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","body","isSameDigitsLeft","i","currentRow","resultArray","map","child","push","x","splice","indexField","isSameDigitsUp","rowInd","colInd","y","currentChild","colIndex","rowIndex","fieldCell","textCon","emptyCellNum"],"mappings":"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","file":"main.64c074de.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst fieldCellList = document.querySelectorAll('.field-cell');\nconst fieldRowList = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nconst handleStartButton = () => {\n  startButton.classList.toggle('restart');\n  createNewCell();\n  createNewCell();\n  colorField();\n\n  startButton.textContent = startButton.classList.contains('restart')\n    ? 'Restart' : 'Start';\n\n  if (startButton.classList.contains('restart')) {\n    fieldCellAdder();\n  } else {\n    for (const item of fieldCellList) {\n      item.className = 'field-cell';\n      item.textContent = '';\n    }\n  }\n\n  if (startButton.textContent === 'Start') {\n    gameScore.textContent = 0;\n  }\n};\n\nfunction startTheGame() {\n  startButton.addEventListener('click', handleStartButton);\n}\n\nfunction winGame() {\n  if ([...fieldCellList].some(cell => cell.textContent === '2048') === true) {\n    messageStart.classList.add('hidden');\n    messageWin.classList.remove('hidden');\n    startButton.removeEventListener('click', handleStartButton);\n    startButton.addEventListener('click', handleStartButton);\n\n    return true;\n  } else {\n    messageStart.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n\n    return false;\n  }\n}\n\nfunction loseGame() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === false) {\n    return false;\n  }\n\n  for (let rowI = 0; rowI < 4; rowI++) {\n    const curentRow = fieldRowList[rowI];\n\n    for (let colI = 0; colI < 3; colI++) {\n      // eslint-disable-next-line max-len\n      if (+curentRow.children[colI].textContent === +curentRow.children[colI + 1].textContent) {\n        return false;\n      }\n    }\n  }\n\n  for (let rowI = 0; rowI < 3; rowI++) {\n    for (let colI = 0; colI < 4; colI++) {\n      const curentEle = fieldRowList[rowI].children[colI];\n\n      // eslint-disable-next-line max-len\n      if (+curentEle.textContent === +fieldRowList[rowI + 1].children[colI].textContent) {\n        return false;\n      }\n    }\n  }\n\n  messageStart.classList.add('hidden');\n  messageLose.classList.remove('hidden');\n  startButton.removeEventListener('click', handleStartButton);\n  startButton.addEventListener('click', handleStartButton);\n\n  return true;\n};\n\nfunction emptyFieldNumber() {\n  let index;\n\n  const winTheGame = winGame();\n  const loseTheGame = loseGame();\n\n  if (winTheGame === true) {\n    return;\n  }\n\n  if (loseTheGame === false || winTheGame === false) {\n    do {\n      index = Math.floor(Math.random() * 16);\n    } while (fieldCellList[index].textContent.length !== 0);\n\n    messageLose.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n\n    return index;\n  }\n};\n\nconst handleKeyDown = (e) => {\n  const key = e.key;\n\n  if (startButton.textContent === 'Start'\n    || messageStart.classList.contains('hidden')) {\n    return;\n  }\n\n  switch (key) {\n    case 'ArrowLeft':\n      // Left pressed\n      ArrowLeft();\n      break;\n    case 'ArrowRight':\n      // Right pressed\n      ArrowRight();\n      break;\n    case 'ArrowUp':\n      // Up pressed\n      ArrowUp();\n      break;\n    case 'ArrowDown':\n      // Down pressed\n      ArrowDown();\n      break;\n    default:\n      break;\n  }\n\n  if ([...fieldCellList].some(cell => cell.textContent === '') === true) {\n    createNewCell();\n    colorField();\n  }\n};\n\nfunction fieldCellAdder() {\n  document.body.addEventListener('keydown', handleKeyDown);\n}\n\nfunction ArrowLeft() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    let isSameDigitsLeft = false;\n\n    for (let rowI = 0; rowI < 4; rowI++) {\n      const curentRow = fieldRowList[rowI];\n\n      for (let colI = 0; colI < 3; colI++) {\n        // eslint-disable-next-line max-len\n        if (+curentRow.children[colI].textContent === +curentRow.children[colI + 1].textContent) {\n          isSameDigitsLeft = true;\n        }\n      }\n    }\n\n    if (isSameDigitsLeft === false) {\n      loseGame();\n\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const currentRow = fieldRowList[i];\n    const resultArray = [];\n\n    [...currentRow.children].map((child) => {\n      if (child.textContent.length !== 0) {\n        resultArray.push(+child.textContent);\n        child.textContent = '';\n      }\n    });\n\n    for (let x = 0; x < resultArray.length - 1; x++) {\n      if (resultArray[x] === resultArray[x + 1]) {\n        resultArray[x] = resultArray[x] * 2;\n        gameScore.textContent = +gameScore.textContent + resultArray[x];\n\n        resultArray.splice((x + 1), 1);\n        x = 0;\n      }\n    };\n\n    for (let index = 0; index < resultArray.length; index++) {\n      currentRow.children[index].textContent = resultArray[index];\n    }\n  }\n\n  return +gameScore.textContent;\n}\n\nfunction ArrowRight() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    let isSameDigitsLeft = false;\n\n    for (let rowI = 0; rowI < 4; rowI++) {\n      const curentRow = fieldRowList[rowI];\n\n      for (let colI = 0; colI < 3; colI++) {\n        // eslint-disable-next-line max-len\n        if (+curentRow.children[colI].textContent === +curentRow.children[colI + 1].textContent) {\n          isSameDigitsLeft = true;\n          break;\n        }\n      }\n    }\n\n    if (isSameDigitsLeft === false) {\n      loseGame();\n\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const currentRow = fieldRowList[i];\n    const resultArray = [];\n\n    [...currentRow.children].map((child) => {\n      if (child.textContent.length !== 0) {\n        resultArray.push(+child.textContent);\n        child.textContent = '';\n      }\n    });\n\n    for (let x = resultArray.length - 1; x >= 0; x--) {\n      if (resultArray[x] === resultArray[x - 1]) {\n        resultArray[x] = resultArray[x] * 2;\n        gameScore.textContent = +gameScore.textContent + resultArray[x];\n\n        resultArray.splice((x - 1), 1);\n        x = 0;\n      }\n    };\n\n    let indexField = 3;\n\n    for (let index = resultArray.length - 1; index >= 0; index--) {\n      currentRow.children[indexField].textContent = resultArray[index];\n      indexField = indexField - 1;\n    }\n  }\n\n  return +gameScore.textContent;\n}\n\nfunction ArrowUp() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    let isSameDigitsUp = false;\n\n    for (let rowInd = 0; rowInd < 3; rowInd++) {\n      for (let colInd = 0; colInd < 4; colInd++) {\n        const curentEle = fieldRowList[rowInd].children[colInd];\n\n        // eslint-disable-next-line max-len\n        if (+curentEle.textContent === +fieldRowList[rowInd + 1].children[colInd].textContent) {\n          isSameDigitsUp = true;\n          break;\n        }\n      }\n    }\n\n    if (isSameDigitsUp === false) {\n      loseGame();\n\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const resultArray = [];\n\n    for (let y = 0; y < 4; y++) {\n      const currentChild = fieldRowList[y].children[i];\n\n      if (currentChild.textContent.length !== 0) {\n        resultArray.push(+currentChild.textContent);\n\n        currentChild.textContent = '';\n      }\n    };\n\n    for (let x = resultArray.length - 1; x >= 0; x--) {\n      if (resultArray[x] === resultArray[x - 1]) {\n        resultArray[x] = resultArray[x] * 2;\n        gameScore.textContent = +gameScore.textContent + resultArray[x];\n\n        resultArray.splice((x - 1), 1);\n        x = 0;\n      }\n    };\n\n    for (let index = 0; index < resultArray.length; index++) {\n      fieldRowList[index].children[i].textContent = resultArray[index];\n    }\n  }\n\n  return +gameScore.textContent;\n}\n\nfunction ArrowDown() {\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    let isSameDigitsUp = false;\n\n    for (let colIndex = 0; colIndex < 3; colIndex++) {\n      for (let rowIndex = 0; rowIndex < 4; rowIndex++) {\n        const curentEle = fieldRowList[colIndex].children[rowIndex];\n\n        // eslint-disable-next-line max-len\n        if (+curentEle.textContent === +fieldRowList[colIndex + 1].children[rowIndex].textContent) {\n          isSameDigitsUp = true;\n        }\n      }\n    }\n\n    if (isSameDigitsUp === false) {\n      loseGame();\n\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const resultArray = [];\n\n    for (let y = 0; y < 4; y++) {\n      const currentChild = fieldRowList[y].children[i];\n\n      if (currentChild.textContent.length !== 0) {\n        resultArray.push(+currentChild.textContent);\n\n        currentChild.textContent = '';\n      }\n    };\n\n    for (let x = resultArray.length - 1; x >= 0; x--) {\n      if (resultArray[x] === resultArray[x - 1]) {\n        resultArray[x] = resultArray[x] * 2;\n        gameScore.textContent = +gameScore.textContent + resultArray[x];\n\n        resultArray.splice((x - 1), 1);\n        x = 0;\n      }\n    };\n\n    let indexField = resultArray.length - 1;\n\n    for (let index = 3; index >= 0; index--) {\n      fieldRowList[index].children[i].textContent = resultArray[indexField];\n      indexField = indexField - 1;\n    }\n  }\n\n  if ([...fieldCellList].every(cell => cell.textContent !== '') === true) {\n    loseGame();\n\n    if (messageStart.classList.contains('hidden')) {\n      return;\n    }\n  }\n\n  return +gameScore.textContent;\n}\n\nfunction colorField() {\n  for (const fieldCell of fieldCellList) {\n    const textCon = fieldCell.textContent;\n\n    fieldCell.className = fieldCell.textContent > 0\n      ? `field-cell field-cell--${textCon}`\n      : 'field-cell field-cell--else';\n  }\n}\n\nfunction createNewCell() {\n  const emptyCellNum = emptyFieldNumber();\n\n  if (emptyCellNum >= 0) {\n    fieldCellList[emptyCellNum].classList.add = 'field-cell--2';\n    fieldCellList[emptyCellNum].textContent = '2';\n  }\n}\n\nstartTheGame();\n"]}